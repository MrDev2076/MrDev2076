{"version":3,"file":"tesseract.min.js","mappings":"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","sources":["webpack://Tesseract/webpack/universalModuleDefinition","webpack://Tesseract/./node_modules/regenerator-runtime/runtime.js","webpack://Tesseract/./src/Tesseract.js","webpack://Tesseract/./src/constants/OEM.js","webpack://Tesseract/./src/constants/PSM.js","webpack://Tesseract/./src/constants/defaultOptions.js","webpack://Tesseract/./src/constants/languages.js","webpack://Tesseract/./src/createJob.js","webpack://Tesseract/./src/createScheduler.js","webpack://Tesseract/./src/createWorker.js","webpack://Tesseract/./src/index.js","webpack://Tesseract/./src/utils/getEnvironment.js","webpack://Tesseract/./src/utils/getId.js","webpack://Tesseract/./src/utils/log.js","webpack://Tesseract/./src/utils/resolvePaths.js","webpack://Tesseract/./src/worker/browser/defaultOptions.js","webpack://Tesseract/./src/worker/browser/index.js","webpack://Tesseract/./src/worker/browser/loadImage.js","webpack://Tesseract/./src/worker/browser/onMessage.js","webpack://Tesseract/./src/worker/browser/send.js","webpack://Tesseract/./src/worker/browser/spawnWorker.js","webpack://Tesseract/./src/worker/browser/terminateWorker.js","webpack://Tesseract/webpack/bootstrap","webpack://Tesseract/webpack/runtime/node module decorator","webpack://Tesseract/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tesseract\"] = factory();\n\telse\n\t\troot[\"Tesseract\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n","/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3,\n};\n","/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n  RAW_LINE: '13',\n};\n","module.exports = {\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: () => {},\n};\n","/*\n * languages with existing tesseract traineddata\n * https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016\n */\n\n/**\n * @typedef {object} Languages\n * @property {string} AFR Afrikaans\n * @property {string} AMH Amharic\n * @property {string} ARA Arabic\n * @property {string} ASM Assamese\n * @property {string} AZE Azerbaijani\n * @property {string} AZE_CYRL Azerbaijani - Cyrillic\n * @property {string} BEL Belarusian\n * @property {string} BEN Bengali\n * @property {string} BOD Tibetan\n * @property {string} BOS Bosnian\n * @property {string} BUL Bulgarian\n * @property {string} CAT Catalan; Valencian\n * @property {string} CEB Cebuano\n * @property {string} CES Czech\n * @property {string} CHI_SIM Chinese - Simplified\n * @property {string} CHI_TRA Chinese - Traditional\n * @property {string} CHR Cherokee\n * @property {string} CYM Welsh\n * @property {string} DAN Danish\n * @property {string} DEU German\n * @property {string} DZO Dzongkha\n * @property {string} ELL Greek, Modern (1453-)\n * @property {string} ENG English\n * @property {string} ENM English, Middle (1100-1500)\n * @property {string} EPO Esperanto\n * @property {string} EST Estonian\n * @property {string} EUS Basque\n * @property {string} FAS Persian\n * @property {string} FIN Finnish\n * @property {string} FRA French\n * @property {string} FRK German Fraktur\n * @property {string} FRM French, Middle (ca. 1400-1600)\n * @property {string} GLE Irish\n * @property {string} GLG Galician\n * @property {string} GRC Greek, Ancient (-1453)\n * @property {string} GUJ Gujarati\n * @property {string} HAT Haitian; Haitian Creole\n * @property {string} HEB Hebrew\n * @property {string} HIN Hindi\n * @property {string} HRV Croatian\n * @property {string} HUN Hungarian\n * @property {string} IKU Inuktitut\n * @property {string} IND Indonesian\n * @property {string} ISL Icelandic\n * @property {string} ITA Italian\n * @property {string} ITA_OLD Italian - Old\n * @property {string} JAV Javanese\n * @property {string} JPN Japanese\n * @property {string} KAN Kannada\n * @property {string} KAT Georgian\n * @property {string} KAT_OLD Georgian - Old\n * @property {string} KAZ Kazakh\n * @property {string} KHM Central Khmer\n * @property {string} KIR Kirghiz; Kyrgyz\n * @property {string} KOR Korean\n * @property {string} KUR Kurdish\n * @property {string} LAO Lao\n * @property {string} LAT Latin\n * @property {string} LAV Latvian\n * @property {string} LIT Lithuanian\n * @property {string} MAL Malayalam\n * @property {string} MAR Marathi\n * @property {string} MKD Macedonian\n * @property {string} MLT Maltese\n * @property {string} MSA Malay\n * @property {string} MYA Burmese\n * @property {string} NEP Nepali\n * @property {string} NLD Dutch; Flemish\n * @property {string} NOR Norwegian\n * @property {string} ORI Oriya\n * @property {string} PAN Panjabi; Punjabi\n * @property {string} POL Polish\n * @property {string} POR Portuguese\n * @property {string} PUS Pushto; Pashto\n * @property {string} RON Romanian; Moldavian; Moldovan\n * @property {string} RUS Russian\n * @property {string} SAN Sanskrit\n * @property {string} SIN Sinhala; Sinhalese\n * @property {string} SLK Slovak\n * @property {string} SLV Slovenian\n * @property {string} SPA Spanish; Castilian\n * @property {string} SPA_OLD Spanish; Castilian - Old\n * @property {string} SQI Albanian\n * @property {string} SRP Serbian\n * @property {string} SRP_LATN Serbian - Latin\n * @property {string} SWA Swahili\n * @property {string} SWE Swedish\n * @property {string} SYR Syriac\n * @property {string} TAM Tamil\n * @property {string} TEL Telugu\n * @property {string} TGK Tajik\n * @property {string} TGL Tagalog\n * @property {string} THA Thai\n * @property {string} TIR Tigrinya\n * @property {string} TUR Turkish\n * @property {string} UIG Uighur; Uyghur\n * @property {string} UKR Ukrainian\n * @property {string} URD Urdu\n * @property {string} UZB Uzbek\n * @property {string} UZB_CYRL Uzbek - Cyrillic\n * @property {string} VIE Vietnamese\n * @property {string} YID Yiddish\n */\n\n/**\n  * @type {Languages}\n  */\nmodule.exports = {\n  AFR: 'afr',\n  AMH: 'amh',\n  ARA: 'ara',\n  ASM: 'asm',\n  AZE: 'aze',\n  AZE_CYRL: 'aze_cyrl',\n  BEL: 'bel',\n  BEN: 'ben',\n  BOD: 'bod',\n  BOS: 'bos',\n  BUL: 'bul',\n  CAT: 'cat',\n  CEB: 'ceb',\n  CES: 'ces',\n  CHI_SIM: 'chi_sim',\n  CHI_TRA: 'chi_tra',\n  CHR: 'chr',\n  CYM: 'cym',\n  DAN: 'dan',\n  DEU: 'deu',\n  DZO: 'dzo',\n  ELL: 'ell',\n  ENG: 'eng',\n  ENM: 'enm',\n  EPO: 'epo',\n  EST: 'est',\n  EUS: 'eus',\n  FAS: 'fas',\n  FIN: 'fin',\n  FRA: 'fra',\n  FRK: 'frk',\n  FRM: 'frm',\n  GLE: 'gle',\n  GLG: 'glg',\n  GRC: 'grc',\n  GUJ: 'guj',\n  HAT: 'hat',\n  HEB: 'heb',\n  HIN: 'hin',\n  HRV: 'hrv',\n  HUN: 'hun',\n  IKU: 'iku',\n  IND: 'ind',\n  ISL: 'isl',\n  ITA: 'ita',\n  ITA_OLD: 'ita_old',\n  JAV: 'jav',\n  JPN: 'jpn',\n  KAN: 'kan',\n  KAT: 'kat',\n  KAT_OLD: 'kat_old',\n  KAZ: 'kaz',\n  KHM: 'khm',\n  KIR: 'kir',\n  KOR: 'kor',\n  KUR: 'kur',\n  LAO: 'lao',\n  LAT: 'lat',\n  LAV: 'lav',\n  LIT: 'lit',\n  MAL: 'mal',\n  MAR: 'mar',\n  MKD: 'mkd',\n  MLT: 'mlt',\n  MSA: 'msa',\n  MYA: 'mya',\n  NEP: 'nep',\n  NLD: 'nld',\n  NOR: 'nor',\n  ORI: 'ori',\n  PAN: 'pan',\n  POL: 'pol',\n  POR: 'por',\n  PUS: 'pus',\n  RON: 'ron',\n  RUS: 'rus',\n  SAN: 'san',\n  SIN: 'sin',\n  SLK: 'slk',\n  SLV: 'slv',\n  SPA: 'spa',\n  SPA_OLD: 'spa_old',\n  SQI: 'sqi',\n  SRP: 'srp',\n  SRP_LATN: 'srp_latn',\n  SWA: 'swa',\n  SWE: 'swe',\n  SYR: 'syr',\n  TAM: 'tam',\n  TEL: 'tel',\n  TGK: 'tgk',\n  TGL: 'tgl',\n  THA: 'tha',\n  TIR: 'tir',\n  TUR: 'tur',\n  UIG: 'uig',\n  UKR: 'ukr',\n  URD: 'urd',\n  UZB: 'uzb',\n  UZB_CYRL: 'uzb_cyrl',\n  VIE: 'vie',\n  YID: 'yid',\n};\n","const getId = require('./utils/getId');\n\nlet jobCounter = 0;\n\nmodule.exports = ({\n  id: _id,\n  action,\n  payload = {},\n}) => {\n  let id = _id;\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id,\n    action,\n    payload,\n  };\n};\n","const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n","const resolvePaths = require('./utils/resolvePaths');\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\nconst OEM = require('./constants/OEM');\nconst {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  loadImage,\n  send,\n} = require('./worker/node');\n\nlet workerCounter = 0;\n\nmodule.exports = async (langs = 'eng', oem = OEM.LSTM_ONLY, _options = {}, config = {}) => {\n  const id = getId('Worker', workerCounter);\n  const {\n    logger,\n    errorHandler,\n    ...options\n  } = resolvePaths({\n    ...defaultOptions,\n    ..._options,\n  });\n  const promises = {};\n\n  // Current langs, oem, and config file.\n  // Used if the user ever re-initializes the worker using `worker.reinitialize`.\n  const currentLangs = typeof langs === 'string' ? langs.split('+') : langs;\n  let currentOem = oem;\n  let currentConfig = config;\n  const lstmOnlyCore = [OEM.DEFAULT, OEM.LSTM_ONLY].includes(oem) && !options.legacyCore;\n\n  let workerResReject;\n  let workerResResolve;\n  const workerRes = new Promise((resolve, reject) => {\n    workerResResolve = resolve;\n    workerResReject = reject;\n  });\n  const workerError = (event) => { workerResReject(event.message); };\n\n  let worker = spawnWorker(options);\n  worker.onerror = workerError;\n\n  workerCounter += 1;\n\n  const startJob = ({ id: jobId, action, payload }) => (\n    new Promise((resolve, reject) => {\n      log(`[${id}]: Start ${jobId}, action=${action}`);\n      // Using both `action` and `jobId` in case user provides non-unique `jobId`.\n      const promiseId = `${action}-${jobId}`;\n      promises[promiseId] = { resolve, reject };\n      send(worker, {\n        workerId: id,\n        jobId,\n        action,\n        payload,\n      });\n    })\n  );\n\n  const load = () => (\n    console.warn('`load` is depreciated and should be removed from code (workers now come pre-loaded)')\n  );\n\n  const loadInternal = (jobId) => (\n    startJob(createJob({\n      id: jobId, action: 'load', payload: { options: { lstmOnly: lstmOnlyCore, corePath: options.corePath, logging: options.logging } },\n    }))\n  );\n\n  const writeText = (path, text, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'writeFile', args: [path, text] },\n    }))\n  );\n\n  const readText = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\n    }))\n  );\n\n  const removeFile = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'unlink', args: [path] },\n    }))\n  );\n\n  const FS = (method, args, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method, args },\n    }))\n  );\n\n  const loadLanguageInternal = (_langs, jobId) => startJob(createJob({\n    id: jobId,\n    action: 'loadLanguage',\n    payload: {\n      langs: _langs,\n      options: {\n        langPath: options.langPath,\n        dataPath: options.dataPath,\n        cachePath: options.cachePath,\n        cacheMethod: options.cacheMethod,\n        gzip: options.gzip,\n        lstmOnly: [OEM.DEFAULT, OEM.LSTM_ONLY].includes(currentOem)\n          && !options.legacyLang,\n      },\n    },\n  }));\n\n  const initializeInternal = (_langs, _oem, _config, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: { langs: _langs, oem: _oem, config: _config },\n    }))\n  );\n\n  const reinitialize = (langs = 'eng', oem, config, jobId) => { // eslint-disable-line\n\n    if (lstmOnlyCore && [OEM.TESSERACT_ONLY, OEM.TESSERACT_LSTM_COMBINED].includes(oem)) throw Error('Legacy model requested but code missing.');\n\n    const _oem = oem || currentOem;\n    currentOem = _oem;\n\n    const _config = config || currentConfig;\n    currentConfig = _config;\n\n    // Only load langs that are not already loaded.\n    // This logic fails if the user downloaded the LSTM-only English data for a language\n    // and then uses `worker.reinitialize` to switch to the Legacy engine.\n    // However, the correct data will still be downloaded after initialization fails\n    // and this can be avoided entirely if the user loads the correct data ahead of time.\n    const langsArr = typeof langs === 'string' ? langs.split('+') : langs;\n    const _langs = langsArr.filter((x) => !currentLangs.includes(x));\n    currentLangs.push(..._langs);\n\n    if (_langs.length > 0) {\n      return loadLanguageInternal(_langs, jobId)\n        .then(() => initializeInternal(langs, _oem, _config, jobId));\n    }\n\n    return initializeInternal(langs, _oem, _config, jobId);\n  };\n\n  const setParameters = (params = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: { params },\n    }))\n  );\n\n  const recognize = async (image, opts = {}, output = {\n    text: true,\n  }, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'recognize',\n      payload: { image: await loadImage(image), options: opts, output },\n    }))\n  );\n\n  const detect = async (image, jobId) => {\n    if (lstmOnlyCore) throw Error('`worker.detect` requires Legacy model, which was not loaded.');\n\n    return startJob(createJob({\n      id: jobId,\n      action: 'detect',\n      payload: { image: await loadImage(image) },\n    }));\n  };\n\n  const terminate = async () => {\n    if (worker !== null) {\n      /*\n      await startJob(createJob({\n        id: jobId,\n        action: 'terminate',\n      }));\n      */\n      terminateWorker(worker);\n      worker = null;\n    }\n    return Promise.resolve();\n  };\n\n  onMessage(worker, ({\n    workerId, jobId, status, action, data,\n  }) => {\n    const promiseId = `${action}-${jobId}`;\n    if (status === 'resolve') {\n      log(`[${workerId}]: Complete ${jobId}`);\n      promises[promiseId].resolve({ jobId, data });\n      delete promises[promiseId];\n    } else if (status === 'reject') {\n      promises[promiseId].reject(data);\n      delete promises[promiseId];\n      if (action === 'load') workerResReject(data);\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger({ ...data, userJobId: jobId });\n    }\n  });\n\n  const resolveObj = {\n    id,\n    worker,\n    load,\n    writeText,\n    readText,\n    removeFile,\n    FS,\n    reinitialize,\n    setParameters,\n    recognize,\n    detect,\n    terminate,\n  };\n\n  loadInternal()\n    .then(() => loadLanguageInternal(langs))\n    .then(() => initializeInternal(langs, oem, config))\n    .then(() => workerResResolve(resolveObj))\n    .catch(() => {});\n\n  return workerRes;\n};\n","/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nrequire('regenerator-runtime/runtime');\nconst createScheduler = require('./createScheduler');\nconst createWorker = require('./createWorker');\nconst Tesseract = require('./Tesseract');\nconst languages = require('./constants/languages');\nconst OEM = require('./constants/OEM');\nconst PSM = require('./constants/PSM');\nconst { setLogging } = require('./utils/log');\n\nmodule.exports = {\n  languages,\n  OEM,\n  PSM,\n  createScheduler,\n  createWorker,\n  setLogging,\n  ...Tesseract,\n};\n","module.exports = (key) => {\n  const env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (typeof document === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n","module.exports = (prefix, cnt) => (\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\n);\n","let logging = false;\n\nexports.logging = logging;\n\nexports.setLogging = (_logging) => {\n  logging = _logging;\n};\n\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\n","const isBrowser = require('./getEnvironment')('type') === 'browser';\n\nconst resolveURL = isBrowser ? s => (new URL(s, window.location.href)).href : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n","const version = require('../../../package.json').version;\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: `https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`,\n};\n","/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst defaultOptions = require('./defaultOptions');\nconst spawnWorker = require('./spawnWorker');\nconst terminateWorker = require('./terminateWorker');\nconst onMessage = require('./onMessage');\nconst send = require('./send');\nconst loadImage = require('./loadImage');\n\nmodule.exports = {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  send,\n  loadImage,\n};\n","/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(image);\n      data = await resp.arrayBuffer();\n    }\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n    const blob = await image.convertToBlob();\n    data = await readFromBlobOrFile(blob);\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n","module.exports = (worker, handler) => {\n  worker.onmessage = ({ data }) => { // eslint-disable-line\n    handler(data);\n  };\n};\n","/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports = async (worker, packet) => {\n  worker.postMessage(packet);\n};\n","/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n","/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = (worker) => {\n  worker.terminate();\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(954);\n"],"names":["root","factory","exports","module","define","amd","self","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_regeneratorRuntime","return","catch","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","createWorker","require","recognize","_ref","_callee2","image","langs","options","worker","_context2","finally","_callee","_context","terminate","_x","_x2","_x3","detect","_ref3","_callee4","_context4","_callee3","_context3","_x4","_x5","TESSERACT_ONLY","LSTM_ONLY","TESSERACT_LSTM_COMBINED","DEFAULT","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","RAW_LINE","workerBlobURL","logger","AFR","AMH","ARA","ASM","AZE","AZE_CYRL","BEL","BEN","BOD","BOS","BUL","CAT","CEB","CES","CHI_SIM","CHI_TRA","CHR","CYM","DAN","DEU","DZO","ELL","ENG","ENM","EPO","EST","EUS","FAS","FIN","FRA","FRK","FRM","GLE","GLG","GRC","GUJ","HAT","HEB","HIN","HRV","HUN","IKU","IND","ISL","ITA","ITA_OLD","JAV","JPN","KAN","KAT","KAT_OLD","KAZ","KHM","KIR","KOR","KUR","LAO","LAT","LAV","LIT","MAL","MAR","MKD","MLT","MSA","MYA","NEP","NLD","NOR","ORI","PAN","POL","POR","PUS","RON","RUS","SAN","SIN","SLK","SLV","SPA","SPA_OLD","SQI","SRP","SRP_LATN","SWA","SWE","SYR","TAM","TEL","TGK","TGL","THA","TIR","TUR","UIG","UKR","URD","UZB","UZB_CYRL","VIE","YID","getId","jobCounter","_id","id","action","_ref$payload","payload","_arrayLikeToArray","arr","len","arr2","Array","createJob","log","schedulerCounter","workers","runningWorkers","jobQueue","getNumWorkers","dequeue","wIds","queue","job","w","shift","t0","_this","concat","isArray","_arrayWithoutHoles","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","t1","t2","addJob","_ref2","_len","_key","_args2","_ref4","wid","addWorker","getQueueLen","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","input","prim","toPrimitive","res","hint","String","_toPrimitive","_toPropertyKey","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","resolvePaths","OEM","_require2","defaultOptions","spawnWorker","terminateWorker","onMessage","loadImage","send","workerCounter","oem","_options","config","_resolvePaths","errorHandler","promises","currentLangs","currentOem","currentConfig","lstmOnlyCore","workerResReject","workerResResolve","workerRes","workerError","startJob","load","loadInternal","writeText","readText","removeFile","FS","loadLanguageInternal","initializeInternal","reinitialize","setParameters","resolveObj","_args4","_excluded","split","includes","legacyCore","event","message","onerror","jobId","promiseId","workerId","console","warn","lstmOnly","corePath","logging","path","text","encoding","_langs","langPath","dataPath","cachePath","cacheMethod","gzip","legacyLang","_oem","_config","x","params","opts","output","_args","t3","t4","t5","t6","t7","t8","_ref5","_ref6","status","data","userJobId","createScheduler","Tesseract","languages","PSM","setLogging","env","WorkerGlobalScope","document","process","prefix","cnt","Math","random","_logging","resolveURL","s","URL","window","location","href","version","workerPath","readFromBlobOrFile","blob","fileReader","FileReader","onload","code","readAsArrayBuffer","resp","atob","map","c","charCodeAt","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","handler","onmessage","packet","postMessage","Worker","createObjectURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","nmd","paths","children"],"sourceRoot":""}